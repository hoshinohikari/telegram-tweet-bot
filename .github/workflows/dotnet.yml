name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: build for dotnet ${{ matrix.dotnet-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        dotnet-version: ['6.0.x']
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with: 
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Build
      run: |
        cd Twitter-Bot/Twitter-Bot
        dotnet build -p:PublishSingleFile=true --self-contained false -c Release
    - name: Test
      run: |
        cd Twitter-Bot/Twitter-Bot
        dotnet test --no-build --verbosity normal
    - name: PostBuild | Prepare Windows
      if: matrix.os == 'windows-latest'
      run: |
        mv Twitter-Bot/Twitter-Bot/bin/Release/net6.0 tw-bot-windows-latest
        7z a tw-bot-windows-latest.zip tw-bot-windows-latest
    - name: PostBuild | Prepare Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        mv Twitter-Bot/Twitter-Bot/bin/Release/net6.0 tw-bot-ubuntu-latest
        tar czvf tw-bot-ubuntu-latest.tar.gz tw-bot-ubuntu-latest
    - name: PostBuild | Prepare macOS
      if: matrix.os == 'macOS-latest'
      run: |
        mv Twitter-Bot/Twitter-Bot/bin/Release/net6.0 tw-bot-macOS-latest
        tar czvf tw-bot-macOS-latest.tar.gz tw-bot-macOS-latest
    - name: Deploy | Upload Windows
      uses: actions/upload-artifact@v2
      with:
        name: tw-bot-windows-latest.zip
        path: tw-bot-windows-latest.zip
    - name: Deploy | Upload Linux
      uses: actions/upload-artifact@v2
      with:
        name: tw-bot-ubuntu-latest.tar.gz
        path: tw-bot-ubuntu-latest.tar.gz
    - name: Deploy | Upload macOS
      uses: actions/upload-artifact@v2
      with:
        name: tw-bot-macOS-latest.tar.gz
        path: tw-bot-macOS-latest.tar.gz
